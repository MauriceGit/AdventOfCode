

def parse_instruction(i):
    return i%10**2, (i // 10**2)%10, (i // 10**3)%10, (i // 10**4)%10


if __name__ == "__main__":

    data = [3,225,1,225,6,6,1100,1,238,225,104,0,1102,27,28,225,1,113,14,224,1001,224,-34,224,4,224,102,8,223,223,101,7,224,224,1,224,223,223,1102,52,34,224,101,-1768,224,224,4,224,1002,223,8,223,101,6,224,224,1,223,224,223,1002,187,14,224,1001,224,-126,224,4,224,102,8,223,223,101,2,224,224,1,224,223,223,1102,54,74,225,1101,75,66,225,101,20,161,224,101,-54,224,224,4,224,1002,223,8,223,1001,224,7,224,1,224,223,223,1101,6,30,225,2,88,84,224,101,-4884,224,224,4,224,1002,223,8,223,101,2,224,224,1,224,223,223,1001,214,55,224,1001,224,-89,224,4,224,102,8,223,223,1001,224,4,224,1,224,223,223,1101,34,69,225,1101,45,67,224,101,-112,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1102,9,81,225,102,81,218,224,101,-7290,224,224,4,224,1002,223,8,223,101,5,224,224,1,223,224,223,1101,84,34,225,1102,94,90,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1007,677,677,224,102,2,223,223,1005,224,329,101,1,223,223,1108,226,677,224,1002,223,2,223,1005,224,344,101,1,223,223,1008,677,677,224,102,2,223,223,1005,224,359,101,1,223,223,8,226,677,224,1002,223,2,223,1006,224,374,101,1,223,223,108,226,677,224,1002,223,2,223,1006,224,389,1001,223,1,223,1107,226,677,224,102,2,223,223,1005,224,404,1001,223,1,223,7,226,677,224,1002,223,2,223,1005,224,419,101,1,223,223,1107,677,226,224,102,2,223,223,1006,224,434,1001,223,1,223,1107,226,226,224,1002,223,2,223,1006,224,449,101,1,223,223,1108,226,226,224,1002,223,2,223,1005,224,464,101,1,223,223,8,677,226,224,102,2,223,223,1005,224,479,101,1,223,223,8,226,226,224,1002,223,2,223,1006,224,494,1001,223,1,223,1007,226,677,224,1002,223,2,223,1006,224,509,1001,223,1,223,108,226,226,224,1002,223,2,223,1006,224,524,1001,223,1,223,1108,677,226,224,102,2,223,223,1006,224,539,101,1,223,223,1008,677,226,224,102,2,223,223,1006,224,554,101,1,223,223,107,226,677,224,1002,223,2,223,1006,224,569,101,1,223,223,107,677,677,224,102,2,223,223,1006,224,584,101,1,223,223,7,677,226,224,102,2,223,223,1005,224,599,101,1,223,223,1008,226,226,224,1002,223,2,223,1005,224,614,1001,223,1,223,107,226,226,224,1002,223,2,223,1005,224,629,101,1,223,223,7,226,226,224,102,2,223,223,1006,224,644,1001,223,1,223,1007,226,226,224,102,2,223,223,1006,224,659,101,1,223,223,108,677,677,224,102,2,223,223,1005,224,674,1001,223,1,223,4,223,99,226]
    #data =[3,0,4,0,99]
    #data = [1002,4,3,4,33]
    #data = [3,9,8,9,10,9,4,9,99,-1,8]
    #data = [3,9,7,9,10,9,4,9,99,-1,8]
    #data = [3,3,1108,-1,8,3,4,3,99]
    #data = [3,3,1107,-1,8,3,4,3,99]
    #data = [3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9]
    #data = [3,3,1105,-1,9,1101,0,0,12,4,12,99,1]
    #data = [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]

    # 1 for the first puzzle
    # 5 for the second puzzle
    input_value = 5

    i = 0
    while True:

        op, p1, p2, p3 = parse_instruction(data[i])

        # explicit exit so at1/2/3 doesn't crash
        if op == 99:
            break

        at1 = data[i+1] if p1 == 0 else i+1
        at2 = data[i+2] if p2 == 0 else i+2
        at3 = data[i+3] if p3 == 0 else i+3

        if op == 1:
            data[at3] = data[at1] + data[at2]
            i += 4
        elif op == 2:
            data[at3] = data[at1] * data[at2]
            i += 4
        elif op == 3:
            data[at1] = input_value
            i += 2
        elif op == 4:
            value = data[at1]
            print(value)
            i += 2
        elif op == 5:
            if data[at1] != 0:
                i = data[at2]
            else:
                i += 3
        elif op == 6:
            if data[at1] == 0:
                i = data[at2]
            else:
                i += 3
        elif op == 7:
            data[at3] = data[at1] < data[at2]
            i += 4
        elif op == 8:
            data[at3] = data[at1] == data[at2]
            i += 4
        else:
            print("ERROR - unknown op code")
            break

# solution for 05.01: 16348437
# solution for 05.02: 6959377
